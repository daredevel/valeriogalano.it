<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PHP on Valerio Galano - Software developer</title>
    <link>https://valeriogalano.it/categories/php/</link>
    <description>Recent content in PHP on Valerio Galano - Software developer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>it-it</language>
    <lastBuildDate>Wed, 23 Aug 2017 09:20:31 +0000</lastBuildDate>
    
	<atom:link href="https://valeriogalano.it/categories/php/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Building ZF3 composed pages using Nesting View Models and Forward Controller Plugin</title>
      <link>https://valeriogalano.it/php/building-zf3-composed-pages-using-nesting-view-models-forward-controller-plugin/</link>
      <pubDate>Wed, 23 Aug 2017 09:20:31 +0000</pubDate>
      
      <guid>https://valeriogalano.it/php/building-zf3-composed-pages-using-nesting-view-models-forward-controller-plugin/</guid>
      <description>Normally in ZF3 MVC projects, each controller action matches one view and use it to render its output.
Occasionally, we may want to build your ZF3 pages by dispatching various controllers from within the matched controller and merging outputs into a unique final view. In this way we can aggregate one or more views to create complex pages like report summaries or widget dashboards.
In this post, we will see how to write few lines of code to include output of an arbitrary action into action matched from route.</description>
    </item>
    
    <item>
      <title>How to inject Zend Service Manager in ZF3 Controllers</title>
      <link>https://valeriogalano.it/php/to-inject-zend-service-manager-zf3-controllers/</link>
      <pubDate>Wed, 07 Jun 2017 09:00:30 +0000</pubDate>
      
      <guid>https://valeriogalano.it/php/to-inject-zend-service-manager-zf3-controllers/</guid>
      <description>Zend Service Manager component is Zend Framework&#39;s implementation of service locator pattern. This object is very usefull component for an application and is largely used in ZF applications.
Unfortunately in ZF3 default application, Service Manager component is no more available in controllers.
An official solution exsists for this, but in this little tutorial, I want to share an easy solution to inject Service Manager in all controllers.
To implement this solution, we will write our controllers by extending an abstract controller class written to handle a Service Manager instance.</description>
    </item>
    
    <item>
      <title>How to setup a Translate Controller Plugin in Zend Framework 3</title>
      <link>https://valeriogalano.it/php/to-setup-translate-controller-plugin-zend-framework-3/</link>
      <pubDate>Thu, 13 Apr 2017 17:10:59 +0000</pubDate>
      
      <guid>https://valeriogalano.it/php/to-setup-translate-controller-plugin-zend-framework-3/</guid>
      <description>Sometimes in our Zend Framework 3 multi-language application, we could need to access to Zend Translator component directly from Controllers. For example, when we have to translate a string to return in a JsonModel.
So, let&#39;s see how to write a very simple Controller Plugin that will help us to save a lot of code (and time).
Following explanation will assume we just have at least a Skeleton ZF3 Application with working Zend Translator component.</description>
    </item>
    
    <item>
      <title>Update Twitter Bootstrap to release 3 in Zend Framework 2</title>
      <link>https://valeriogalano.it/php/update-twitter-bootstrap-to-release-3-in-zend-framework-2/</link>
      <pubDate>Sat, 10 Aug 2013 09:16:47 +0000</pubDate>
      
      <guid>https://valeriogalano.it/php/update-twitter-bootstrap-to-release-3-in-zend-framework-2/</guid>
      <description>Recently I started a new project based on Zend Framework 2, using Twitter Bootstrap as CSS framework. Some days ago, new Bootstrap v3 was released and introduced a lot of changes and improvements. Because of ZF2 Skeleton Application comes out-of-box with Twitter Bootstap 2, I decided to setup the new project skeleton and update CSS framework to latest available release.
In this post, I&#39;ll describe the process to update Bootstrap to v3 into a ZF2 project.</description>
    </item>
    
    <item>
      <title>PHP jobs with Gearman and Supervisor</title>
      <link>https://valeriogalano.it/php/php-jobs-with-gearman-and-supervisor/</link>
      <pubDate>Sun, 09 Jun 2013 10:45:22 +0000</pubDate>
      
      <guid>https://valeriogalano.it/php/php-jobs-with-gearman-and-supervisor/</guid>
      <description>The problem Often in a PHP project there could be operations that need to be executed asynchronously. Some example are: processing mail queues, indexing data, computation that requires long elaboration time.
A common behavior is handle those operations by using cron to execute processes in background. However, using cron requires expedients to avoid cross executions and forces us to implement some specific procedures and mechanism to store data needed to elaborate.</description>
    </item>
    
    <item>
      <title>Processi PHP con Gearman e Supervisor</title>
      <link>https://valeriogalano.it/php/processi-php-con-gearman-e-supervisor/</link>
      <pubDate>Sun, 09 Jun 2013 10:45:22 +0000</pubDate>
      
      <guid>https://valeriogalano.it/php/processi-php-con-gearman-e-supervisor/</guid>
      <description>Problema Spesso in un progetto PHP capita di dover eseguire operazioni in modo asincrono. Alcuni esempi sono: lavorazione di code email, indicizzazione di dati, calcoli che richiedono lunghi tempi di elaborazione.
Prassi comune è gestire tali operazioni utilizzando cron per eseguire processi in backgroud. Tuttavia, utilizzare cron richiede espedienti per evitare l&#39;accavallemento delle esecuzioni e ci costringe ad implementare procedure specifiche e meccanismi di stoccaggio dei dati necessari per l&#39;elaborazione.</description>
    </item>
    
    <item>
      <title>Zend Framework 3.0 branch started!</title>
      <link>https://valeriogalano.it/news-e-approfondimenti/zend-framework-3-0-branch-started/</link>
      <pubDate>Fri, 31 May 2013 08:00:26 +0000</pubDate>
      
      <guid>https://valeriogalano.it/news-e-approfondimenti/zend-framework-3-0-branch-started/</guid>
      <description>Yesterday, Evan Coury, Zend Framework contibutor, announced start of Zend Framework branch.
Development goals will be merged between ZF team ideas and community suggestions that will be collected in this topic. Anyway, Evan immediatly specifies that development will be focused on avoid dramatic migration as was for transition from ZF1 to ZF2.
For all developers that use Zend Framework for their projects, this is the best opportunity to take part to development process and be heard about their needs: power of Open Source.</description>
    </item>
    
    <item>
      <title>Configurare filtri Doctrine 2 in Zend Framework 2</title>
      <link>https://valeriogalano.it/php/configurare-filtri-doctrine-2-in-zend-framework-2/</link>
      <pubDate>Mon, 27 May 2013 12:41:38 +0000</pubDate>
      
      <guid>https://valeriogalano.it/php/configurare-filtri-doctrine-2-in-zend-framework-2/</guid>
      <description>Scenario Un filtro di Doctrine è uno strumento molto potente che può essere utilizzato per aggiungere condizioni a livello SQL all&#39;interno del nostro gestore di oggetti Doctrine 2. Ciò significa che i filtri influenzeranno il comportamento di query DQL, collezioni, recupero dati, ecc.
Come configurare ed utilizzare filtri in condizioni generali è ben spiegato in questo questo articolo della documentazione officiale di Doctrine, ma in un progetto basato su Zend Framework 2, la stessa operazione è un po&amp;rsquo; diversa.</description>
    </item>
    
    <item>
      <title>Setup Doctrine 2 filters in Zend Framework 2</title>
      <link>https://valeriogalano.it/php/setup-doctrine2-filters-in-zend-framework-2/</link>
      <pubDate>Mon, 27 May 2013 12:41:38 +0000</pubDate>
      
      <guid>https://valeriogalano.it/php/setup-doctrine2-filters-in-zend-framework-2/</guid>
      <description>Scenario Doctrine filter is a very powerfull tool that can be used to add conditional clauses at SQL level into our Doctrine 2 engine. This means that filters constraints will affect DQL queries, collections, lazy loading, etc.
How to setup and use filters in generic conditions is well explained in this article of official Doctrine documentation, but in a Zend Framework 2 project, the same operation is a bit different.</description>
    </item>
    
    <item>
      <title>ReCaptcha in Zend Framework 2 without Zend/Form</title>
      <link>https://valeriogalano.it/php/recaptcha-in-zend-framework-2-project-using-zendform-component/</link>
      <pubDate>Fri, 15 Mar 2013 09:52:36 +0000</pubDate>
      
      <guid>https://valeriogalano.it/php/recaptcha-in-zend-framework-2-project-using-zendform-component/</guid>
      <description>The problem Captcha is a very useful mechanism to avoid automated abuse of your sites and applications. In particular,reCAPTCHA is a Google powered service that offers a free and simple way to implement a captcha protection field in your forms or pages. Zend Framework 2 implements his own components to handle captcha and a specific one to handle reCAPTCHA service. At the moment, the ZF2 documentation is very usefull if you want to integrate a reCAPTCHA in your Zend/Form component, but lacks in describing how to use reCAPTCHA service component alone.</description>
    </item>
    
    <item>
      <title>Working with DateTime in Doctrine 2 and Zend Framework 2</title>
      <link>https://valeriogalano.it/php/working-with-datetime-in-doctrine2-and-zend-framework-2/</link>
      <pubDate>Tue, 12 Mar 2013 09:52:39 +0000</pubDate>
      
      <guid>https://valeriogalano.it/php/working-with-datetime-in-doctrine2-and-zend-framework-2/</guid>
      <description>The problem Storing datetimes can be a issue if servers and users of your application are distributed around the World and use different time zones. Each user want to work on datetimes in his specific time zone, servers automatically stores values in their time zone, etc. Storing data without operating right conversion will cause strange behaviours.
The solution The solution is very simple: store all datetimes in UTC time zone and show to each user in his proper time zone.</description>
    </item>
    
    <item>
      <title>Switch to mobile, tablet, or other layout in Zend Framework 1.11</title>
      <link>https://valeriogalano.it/php/switch-to-mobile-tablet-or-other-layout-in-zend-framework-1-11/</link>
      <pubDate>Mon, 12 Dec 2011 09:33:10 +0000</pubDate>
      
      <guid>https://valeriogalano.it/php/switch-to-mobile-tablet-or-other-layout-in-zend-framework-1-11/</guid>
      <description>The problem We want to implement a method to completely switch layout of our Zend Framework application without loosing flexibility. The solution must give us the possibility of switching all layouts and the views of the controllers we want.Other&#39;s solutions I found some solutions on the Web, but I decided to post this article because no one satisfies my needs. They all resort to ContextSwitch to handle views file names, but, in my applications, I just use ContextSwitch in some actions for other purpose, so I&#39;m unable to apply them without restructure existing code.</description>
    </item>
    
  </channel>
</rss>